{"version":3,"file":"static/js/110.2e54aa76.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contacts/ContactList.styles.js","components/contacts/ContactList.jsx","components/filter/Filter.styles.js","components/filter/Filter.jsx","components/form/ContactForm.styles.js","components/form/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\nexport const selectContactsFilter = state => state.filters.filter;\r\n","import styled from 'styled-components';\n\nexport const ContForm = styled.div`\n  h1,\n  h2 {\n    text-align: center;\n    font-size: 28px;\n    color: #fff;\n    text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n      rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  }\n`;\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  padding: 0px 0px 0px 20px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n  transition: all 0.5s ease 0s;\n`;\n\nexport const ContactIcon = styled.div`\n  margin-right: 15px;\n  border-radius: 4px;\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 18px;\n`;\n\nexport const ContactDelete = styled.button`\n  display: inline-block;\n  padding: 10px 12px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 50%;\n  background-color: #391717;\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 2px 5px;\n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: #391717;\n  }\n\n  &:active {\n    scale: 0.95;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { IoPersonOutline } from 'react-icons/io5';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  ContactsList,\n  ContactItem,\n  ContactIcon,\n  ContactText,\n  ContactDelete,\n} from './ContactList.styles';\n\n// компонент використовую список контактів з стору через useSelector\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  // надсилання екшона видалення контакту за допомогою useDispatch\n  const dispatch = useDispatch();\n\n  const handleDelete = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          <ContactIcon>\n            <IoPersonOutline />\n          </ContactIcon>\n          <ContactText>\n            {contact.name}: <span>{contact.number}</span>\n          </ContactText>\n          <ContactDelete type=\"button\" id={contact.id} onClick={handleDelete}>\n            <FaTrashAlt />\n          </ContactDelete>\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0px;\n  margin: 0px 0px 10px;\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n    transition: all 0.5s ease 0s;\n    outline: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\r\nimport { FilterLabel } from './Filter.styles';\r\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\r\n\r\nexport function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlerFilter = evt => {\r\n    dispatch(setFilterContacts(evt.target.value));\r\n  };\r\n\r\n  return (\r\n    <FilterLabel>\r\n      Find contact by the name\r\n      <input type=\"text\" name=\"filter\" onChange={handlerFilter} />\r\n    </FilterLabel>\r\n  );\r\n}\r\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 540px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n    padding: 0px;\n    /* margin: 0px 0px 10px; */\n  }\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n    transition: all 0.5s ease 0s;\n    outline: none;\n  }\n`;\n\nexport const FormList = styled.ul`\n  padding: 0;\n  display: flex;\n`;\n\nexport const FormListItem = styled.li`\n  margin-right: 10px;\n  p {\n    margin-bottom: 8px;\n    font-size: 18px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0px auto;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(57, 23, 23);\n  color: rgb(255, 255, 255);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(57, 23, 23);\n    cursor: pointer;\n  }\n\n  svg {\n    margin-right: 10px;\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport { toast } from 'react-toastify';\r\nimport { selectContacts } from '../../redux/contacts/selectors';\r\nimport { IoPersonAdd } from 'react-icons/io5';\r\nimport { Form, FormList, FormListItem, FormButton } from './ContactForm.styles';\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts);\r\n\r\n  function handlerSubmit(evt) {\r\n    evt.preventDefault();\r\n    const form = evt.target;\r\n    const name = form.name.value;\r\n    const number = form.number.value;\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      return toast.warn(`${name} is alredy in contacts.`);\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n\r\n    form.reset();\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <FormList>\r\n        <FormListItem>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </FormListItem>\r\n        <FormListItem>\r\n          <p>Contact</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </FormListItem>\r\n      </FormList>\r\n\r\n      <FormButton type=\"submit\">\r\n        <IoPersonAdd />\r\n        Add contact\r\n      </FormButton>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Dna } from 'react-loader-spinner';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactList } from 'components/contacts/ContactList';\nimport { Filter } from 'components/filter/Filter';\nimport ContactForm from 'components/form/ContactForm';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { ContForm } from 'components/contacts/ContactList.styles';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContForm>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <Dna\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n      <ContactList />\n    </ContForm>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContForm","styled","ContactsList","ContactItem","ContactIcon","ContactText","ContactDelete","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","handleDelete","evt","deleteContact","currentTarget","id","visibilityContacts","contact","name","includes","map","number","type","onClick","FilterLabel","Filter","onChange","setFilterContacts","target","value","Form","FormList","FormListItem","FormButton","onSubmit","preventDefault","form","find","toast","addContact","reset","pattern","title","required","useEffect","fetchContacts","visible","height","width","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}