{"version":3,"file":"static/js/613.1f64f022.chunk.js","mappings":"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","sources":["components/App/App.styled.js","redux/contacts/selectors.js","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Section/Section.styled.js","components/Section/Section.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 30px 150px;\n`;\n\nexport const MainHeader = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const SecondaryHeader = styled.h2`\n  margin-bottom: 20px;\n`;\nexport const Container = styled.div`\n  min-height: calc(100vh - 50px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const ContainerContacts = styled.div`\n  padding: 0px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nconst selectFilter = state => state.contacts.filter;\n\n// createSelector\nexport const selectFilteredContacts = createSelector(\n  // Масив вхідних селекторів\n  [selectContacts, selectFilter],\n  // Функція перетворювач\n  (contacts, filter) => {\n    // Виконуємо обчислення та повертаємо результат\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const FormAddContact = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, Input } from '@chakra-ui/react';\nimport { BsPersonFillAdd } from 'react-icons/bs';\nimport { FormAddContact, Label } from './Phonebook.styled';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    const checkName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      e.target.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    e.target.reset();\n  };\n\n  return (\n    <FormAddContact onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          size=\"xs\"\n          variant=\"filled\"\n          borderRadius=\"8px\"\n          focusBorderColor=\"teal.500\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          size=\"xs\"\n          variant=\"filled\"\n          borderRadius=\"8px\"\n          focusBorderColor=\"teal.500\"\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button\n        leftIcon={<BsPersonFillAdd />}\n        colorScheme=\"teal\"\n        size=\"xs\"\n        m=\"0 auto\"\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </FormAddContact>\n  );\n};\n\nexport default Phonebook;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  /* width: 100%; */\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n  width: 30%;\n  padding: 0 0 0 20px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  p {\n    margin: 0;\n    padding: 10px 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 10px 12px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 50%;\n  background-color: #391717;\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  /* cursor: pointer; */\n\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 2px 5px;\n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: #391717;\n  }\n\n  &:active {\n    scale: 0.95;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { Button, ListItem, List, ItemWrapper } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ItemWrapper>\n            <p>{name}: </p>\n            <p>{number}</p>\n          </ItemWrapper>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            <FaTrashAlt />\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const SectionContainer = styled.div`\n  padding: 20px 0px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionContainer, SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    {title && <SectionTitle>{title}</SectionTitle>}\n    {children}\n  </SectionContainer>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 30%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n  transition: 0.5s;\n  outline: none;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\n","import { Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/contacts/contactsSlice';\nimport { Input } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        size=\"xs\"\n        variant=\"filled\"\n        borderRadius=\"8px\"\n        focusBorderColor=\"teal.500\"\n        type=\"text\"\n        placeholder=\"Enter name\"\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport ContactList from 'components/ContactList/ContactList';\nimport Section from 'components/Section/Section';\nimport Filter from 'components/Filter/Filter';\nimport { ContainerContacts } from 'components/App/App.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContainerContacts>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      {contacts?.length > 0 ? (\n        <Section title=\"Contacts\">\n          {contacts?.length > 1 ? <Filter /> : ''}\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList />\n        </Section>\n      ) : (\n        <b>Your phonebook is currently empty</b>\n      )}\n    </ContainerContacts>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","Title","ContainerContacts","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","FormAddContact","Label","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","target","value","number","some","alert","reset","addContact","I","size","variant","borderRadius","focusBorderColor","type","placeholder","pattern","title","required","leftIcon","colorScheme","m","List","ListItem","ItemWrapper","Button","map","id","onClick","deleteContact","SectionContainer","SectionTitle","children","onChange","filteredContacts","useEffect","fetchContacts","length"],"sourceRoot":""}